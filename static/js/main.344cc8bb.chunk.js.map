{"version":3,"sources":["rfm/services/sw/index.ts","rfm/components/Shell/Footer.tsx","rfm/components/Shell/Header.tsx","rfm/components/Shell/index.tsx","rfm/services/api/github.ts","home/Search.tsx","rfm/components/Star/index.tsx","rfm/components/Issue/index.tsx","rfm/components/Circle/index.tsx","home/List.tsx","rfm/components/Error/index.tsx","home/index.tsx","rfm/components/Progress/index.tsx","rfm/services/github/index.ts","submit/Button.tsx","submit/Preview.tsx","rfm/components/Comments/index.tsx","submit/Issue.tsx","submit/Find.tsx","submit/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Footer","className","aria-label","role","href","rel","target","Header","to","Shell","props","children","GITHUB_ROOT","fetcherRequestList","a","query","params","path","join","fetch","response","json","payload","items","map","item","body","JSON","parse","id","comments","createdAt","Date","created_at","title","updatedAt","updated_at","url","html_url","ex","requestList","filter","_","total","total_count","safe","collection","key","name","property","fetcherSubmitRequest","repoUrl","split","pathname","owner","headers","Accept","language","langmap","repo","description","fullName","full_name","openIssues","open_issues_count","stars","stargazers_count","requestIssueFullName","requestIssueNumber","license","fetcherFindSupportIssues","user","login","number","Search","style","height","onSubmit","e","preventDefault","form","FormData","currentTarget","setQuery","get","htmlFor","placeholder","type","value","Star","viewBox","version","width","fillRule","d","Issue","aria-hidden","Circle","backgroundColor","color","List","selectMessage","display","topics","topic","toLocaleDateString","humanNumber","Error","error","console","Home","useState","useSWR","data","Progress","useSpring","ratio","document","clientWidth","div","isValidGithubUrl","candidate","isValidUrl","isURL","host_whitelist","isValidFullName","length","Button","disabled","loading","Preview","request","requestIssue","requestIssueURL","left","slice","Number","parseRequestIssue","newGithubIssueUrl","stringify","labels","Object","keys","Array","formatProperty","Comments","didSubmit","setDidSubmit","isNaN","isValidGithubIssueUrl","onNext","onChange","setRequestIssue","required","checked","createPortal","getElementsByTagName","Repo","inputValue","setInputValue","setLoading","useEffect","setRepoUrl","top","transform","Submit","index","setIndex","useCallback","state","transitions","useTransition","p","from","opacity","enter","leave","Find","App","useLocation","exact","component","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.344cc8bb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\n\nconst Footer: React.FC<{}> = () => {\n  return (\n    <footer className='flex flex-row justify-between w-full max-w-4xl p-4 mx-auto mt-4'>\n      <p>\n        Hand-crafted with\n        <span className='mx-1 text-red-700' aria-label='heart' role='img'>\n          ♥️\n        </span>\n        by\n        <a\n          className='ml-1 link'\n          href='https://sospedra.me'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          @sospedra\n        </a>\n      </p>\n\n      <div className='flex flex-col items-end'>\n        <a\n          href='https://twitter.com/sospedra_r'\n          target='_blank'\n          rel='noopener noreferrer'\n          className='link'\n        >\n          Contact\n        </a>\n        <a\n          href='https://github.com/sospedra/rfm'\n          target='_blank'\n          rel='noopener noreferrer'\n          className='link'\n        >\n          Github\n        </a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header: React.FC<{}> = () => {\n  return (\n    <header className='flex flex-row justify-between w-full max-w-4xl p-4 mx-auto'>\n      <Link to='/' className='font-mono text-xl font-bold text-black'>\n        <span role='img' aria-label='construction'>\n          🚧\n        </span>{' '}\n        rfm\n      </Link>\n      <Link\n        to='/submit'\n        className='px-2 py-1 text-pink-600 border border-pink-600 rounded'\n      >\n        Submit new repo\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Footer from './Footer'\nimport Header from './Header'\n\nconst Shell: React.FC<{}> = (props) => (\n  <div className='flex flex-col min-h-screen'>\n    <Header />\n    <main className='flex-grow w-full max-w-4xl p-4 mx-auto'>\n      {props.children}\n    </main>\n    <Footer />\n  </div>\n)\n\nexport default Shell\n","import langmap from 'language-map'\n\nconst GITHUB_ROOT = 'https://api.github.com'\n\nexport type SubmitRequest = {\n  aceMode?: string\n  aliases?: string[]\n  color?: string\n  description: string\n  extensions?: string[]\n  filenames?: string[]\n  fullName: string\n  owner: string\n  name: string\n  group?: string\n  interpreters?: string[]\n  language: string\n  license?: string\n  requestIssueFullName: string\n  requestIssueNumber: number\n  openIssues: number\n  stars: number\n  topics?: string[]\n  updatedAt: string\n  url: string\n}\n\nexport type Request = {\n  body: SubmitRequest\n  comments: number\n  createdAt: Date\n  title: string\n  id: number\n  updatedAt: Date\n  url: string\n}\n\nexport const fetcherRequestList = async (query: string = '') => {\n  const params = [\n    'repo:sospedra/rfm',\n    'state:open',\n    'label:search',\n    query,\n    'in:title,body',\n  ]\n  const path = `${GITHUB_ROOT}/search/issues?q=${params.join('+')}&per_page=100`\n  const response = await fetch(path)\n  const payload: {\n    items: { [key: string]: any }[]\n    total_count: number\n  } = await response.json()\n  const items = payload.items.map<Request | null>((item) => {\n    try {\n      return {\n        body: JSON.parse(item.body),\n        id: item.id,\n        comments: item.comments,\n        createdAt: new Date(item.created_at),\n        title: item.title,\n        updatedAt: new Date(item.updated_at),\n        url: item.html_url,\n      }\n    } catch (ex) {\n      return null\n    }\n  })\n  const requestList = items.filter((_) => _ !== null) as Request[]\n\n  return {\n    requestList,\n    total: payload.total_count,\n  }\n}\n\nconst safe = <T extends { [key: string]: any }>(\n  collection: T | undefined,\n  key: keyof T,\n  name?: string,\n) => {\n  if (!collection) return {}\n  let property = collection[key] as string | string[] | number\n  return !!property ? { [name || key]: property } : {}\n}\n\nexport const fetcherSubmitRequest = async (repoUrl: string) => {\n  const [_, pathname] = repoUrl.split('github.com/')\n  const [owner, name] = pathname.split('/')\n  const response: { [key: string]: any } = await fetch(\n    `${GITHUB_ROOT}/repos/${owner}/${name}`,\n    {\n      headers: {\n        Accept: 'application/vnd.github.mercy-preview+json',\n      },\n    },\n  )\n  const payload = await response.json()\n  const language = langmap[payload.language]\n  const repo: SubmitRequest = {\n    description: payload.description,\n    fullName: payload.full_name,\n    language: payload.language,\n    name,\n    openIssues: payload.open_issues_count,\n    owner,\n    stars: payload.stargazers_count,\n    updatedAt: payload.updated_at,\n    url: payload.html_url,\n    requestIssueFullName: 'NONE',\n    requestIssueNumber: -1,\n    ...safe(payload.license, 'spdx_id', 'license'),\n    ...safe(payload, 'topics'),\n    ...safe(language, 'filenames'),\n    ...safe(language, 'aceMode'),\n    ...safe(language, 'aliases'),\n    ...safe(language, 'color'),\n    ...safe(language, 'extensions'),\n    ...safe(language, 'group'),\n    ...safe(language, 'interpreters'),\n  }\n\n  return repo\n}\n\nexport const fetcherFindSupportIssues = async (fullName: string) => {\n  const params = [\n    `repo:${fullName}`,\n    'state:open',\n    'type:issue',\n    'support OR maintain',\n    'in:title,body',\n  ]\n  const path = `${GITHUB_ROOT}/search/issues?q=${params.join('+')}&per_page=10`\n  const response = await fetch(path)\n  const payload: {\n    items: { [key: string]: any }[]\n    total_count: number\n  } = await response.json()\n  const items = payload.items.map<\n    Partial<Request> & {\n      user: string\n      number: number\n      body: string\n    }\n  >((item) => ({\n    id: item.id,\n    body: item.body,\n    comments: item.comments,\n    createdAt: new Date(item.created_at),\n    title: item.title,\n    url: item.html_url,\n    user: item.user.login,\n    number: item.number,\n  }))\n\n  return {\n    requestList: items,\n    total: payload.total_count,\n  }\n}\n","import React from 'react'\n\nconst Search: React.FC<{\n  setQuery: (query: string) => void\n}> = (props) => {\n  return (\n    <section\n      className='flex flex-col items-center justify-center w-full text-center md:p-8'\n      style={{ height: '50%' }}\n    >\n      <h2 className='italic'>Request for maintainers</h2>\n      <form\n        className='w-full max-w-xl mx-auto'\n        onSubmit={(e) => {\n          e.preventDefault()\n          const form = new FormData(e.currentTarget)\n          props.setQuery(form.get('search') as string)\n        }}\n      >\n        <label htmlFor='search' className='block'>\n          <h1 className='font-mono text-xl font-bold'>\n            Browse repos that need support\n          </h1>\n        </label>\n        <div className='flex flex-row my-4'>\n          <input\n            id='search'\n            name='search'\n            className='block w-full px-4 py-2 border rounded shadow-lg'\n            placeholder='Type a name, language, tag, etc.'\n          />\n          <input\n            className='px-4 py-2 ml-4 text-white bg-pink-600 rounded shadow-lg cursor-pointer hover:bg-pink-700'\n            type='submit'\n            value='Search'\n          />\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Star: React.FC<{}> = () => (\n  <svg\n    aria-label='star'\n    className='inline-block align-text-bottom fill-current'\n    viewBox='0 0 14 16'\n    version='1.1'\n    width='14'\n    height='16'\n    role='img'\n  >\n    <path\n      fillRule='evenodd'\n      d='M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z'\n    ></path>\n  </svg>\n)\n\nexport default Star\n","import React from 'react'\n\nconst Issue: React.FC<{}> = () => (\n  <svg\n    className='inline-block align-text-bottom fill-current'\n    viewBox='0 0 14 16'\n    version='1.1'\n    width='14'\n    height='16'\n    aria-hidden='true'\n  >\n    <path\n      fillRule='evenodd'\n      d='M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 011.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z'\n    ></path>\n  </svg>\n)\n\nexport default Issue\n","import React from 'react'\n\nconst Circle: React.FC<{ color?: string }> = (props) => (\n  <span\n    className='relative inline-block mr-1 bg-gray-900 rounded-full'\n    style={{\n      backgroundColor: props.color,\n      width: 14,\n      height: 14,\n    }}\n  />\n)\n\nexport default Circle\n","import React from 'react'\nimport { Code as PlaceholderCode } from 'react-content-loader'\nimport humanNumber from 'human-number'\nimport { Request } from '../rfm/services/api/github'\nimport Star from '../rfm/components/Star'\nimport Issue from '../rfm/components/Issue'\nimport Circle from '../rfm/components/Circle'\n\nconst selectMessage = (total?: number) => {\n  switch (total) {\n    case 0:\n      return (\n        <p className='text-lg'>\n          There are not requests that matches your criteria{' '}\n          <span role='img' aria-label='shrug'>\n            🤷🏻‍♂️\n          </span>{' '}\n          Try another search.\n        </p>\n      )\n    case 1:\n      return (\n        <p className='text-lg'>\n          There is <b>1</b> request that needs your help{' '}\n          <span role='img' aria-label='muscle'>\n            💪\n          </span>\n        </p>\n      )\n    default:\n      return (\n        <p className='text-lg'>\n          There are <b>{total}</b> requests that need your help{' '}\n          <span role='img' aria-label='hero'>\n            🦸🏽‍♀️\n          </span>\n        </p>\n      )\n  }\n}\n\nconst List: React.FC<{\n  requestList?: Request[]\n  total?: number\n}> = (props) => {\n  if (!props.requestList) {\n    return (\n      <section className='w-full py-4 md:w-2/3'>\n        <PlaceholderCode />\n        <br />\n        <PlaceholderCode />\n      </section>\n    )\n  }\n  return (\n    <section className='w-full py-4'>\n      {selectMessage(props.total)}\n      <ul>\n        {props.requestList.map(({ url, createdAt, body }) => (\n          <li key={url} className='py-4 border-b sm:mx-4'>\n            <a\n              href={body.url}\n              target='_blank'\n              rel='noopener noreferrer'\n              className='text-lg text-blue-600 hover:text-blue-800'\n              style={{ display: 'block' }}\n            >\n              {body.owner}/<b>{body.name}</b>\n            </a>\n            <p className='pt-1'>{body.description}</p>\n            <div className='flex flex-row flex-wrap items-end w-full pt-1 text-sm'>\n              {body.topics?.map((topic) => (\n                <span\n                  key={topic}\n                  className='p-1 mb-1 mr-1 text-pink-500 bg-pink-100 rounded'\n                >\n                  {topic}\n                </span>\n              ))}\n            </div>\n            <p className='text-sm text-gray-700'>\n              Requested at{' '}\n              <b className='font-semibold'>{createdAt.toLocaleDateString()}</b>{' '}\n              <a\n                href={url}\n                className='text-blue-600 hover:text-blue-800'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                Did something change?\n              </a>\n            </p>\n            <div className='flex flex-row pt-1 text-sm text-gray-700'>\n              <span className='mr-4'>\n                <Star /> {humanNumber(body.stars)}\n              </span>\n              <span className='flex flex-row items-center mr-4'>\n                <Circle color={body.color} /> {body.language}\n              </span>\n              <span className='mr-4'>\n                <Issue /> {body.openIssues}\n              </span>\n              <span className='mr-4'>{body.license}</span>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <div className='pt-4 text-sm italic text-gray-800'>\n        <p>\n          <b className='font-semibold'>\n            ProTip\n            <span aria-label='trademark' role='img'>\n              ™️\n            </span>{' '}\n          </b>\n          Results are limited to a{' '}\n          <b className='font-semibold'>maximum of 100 items</b> per search.\n        </p>\n        <p>\n          To get the best results{' '}\n          <b className='font-semibold'>refine your query</b> or inspect the{' '}\n          <a\n            className='text-blue-500 hover:text-blue-700'\n            href='https://github.com/sospedra/rfm'\n          >\n            repo\n          </a>\n        </p>\n      </div>\n    </section>\n  )\n}\n\nexport default List\n","import React from 'react'\n\nconst Error: React.FC<{\n  error: any\n}> = (props) => {\n  if (!props.error) return null\n  return (\n    <aside className='p-4 m-6 text-red-700 border border-red-700 rounded'>\n      {console.error(props.error)}\n      Something went wrong. Check the report details in the console.\n    </aside>\n  )\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport useSWR from 'swr'\nimport Shell from '../rfm/components/Shell'\nimport { fetcherRequestList } from '../rfm/services/api/github'\nimport Search from './Search'\nimport List from './List'\nimport Error from '../rfm/components/Error'\n\nconst Home: React.FC<{}> = () => {\n  const [query, setQuery] = useState(' ')\n  const { data, error } = useSWR(query, fetcherRequestList)\n\n  return (\n    <Shell>\n      <Search setQuery={setQuery} />\n      <Error error={error} />\n      <List {...data} />\n    </Shell>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nconst Progress: React.FC<{\n  ratio: number\n}> = (props) => {\n  const style = useSpring({ width: props.ratio * document.body.clientWidth })\n\n  return (\n    <div className='fixed top-0 left-0 right-0 z-50 h-1'>\n      <animated.div className='h-full bg-pink-500' style={style} />\n    </div>\n  )\n}\n\nexport default Progress\n","import newGithubIssueUrl from 'new-github-issue-url'\nimport isURL from 'validator/lib/isURL'\nimport { SubmitRequest } from '../api/github'\n\nexport const createGithubIssue = (request?: SubmitRequest) => {\n  if (!request) return ''\n  return newGithubIssueUrl({\n    body: JSON.stringify(request, null, 4),\n    labels: ['search'],\n    repo: 'rfm',\n    title: request.fullName,\n    user: 'sospedra',\n  })\n}\n\nexport const isValidGithubUrl = (candidate: string) => {\n  try {\n    const isValidUrl = isURL(candidate, {\n      host_whitelist: [/^.*github\\.com$/],\n    })\n    const isValidFullName =\n      candidate.split('/').length === 2 && candidate.match(/\\//gi)?.length === 1\n\n    return isValidUrl || isValidFullName\n  } catch (ex) {\n    return false\n  }\n}\n\nexport const createGithubRepoUrl = (candidate: string) => {\n  return isURL(candidate) ? candidate : `https://github.com/${candidate}`\n}\n\nexport const NONE_ISSUE = 'NONE'\n\nexport const isValidGithubIssueUrl = (candidate: string) => {\n  try {\n    if (candidate === NONE_ISSUE) return true\n\n    if (isValidGithubUrl(candidate)) {\n      const [path, number] = candidate.split('/').slice(-2)\n      if (path === 'issues') {\n        if (!Number.isNaN(Number(number))) {\n          return true\n        }\n      }\n    }\n\n    return false\n  } catch (ex) {\n    return false\n  }\n}\n","import React from 'react'\nimport './button.css'\n\nconst Button: React.FC<{\n  disabled?: boolean\n  href?: string\n  form?: string\n  loading?: boolean\n  children: string\n}> = (props) => {\n  return props.href ? (\n    <a\n      className='w-64 px-4 py-2 text-white bg-pink-600 rounded shadow-lg hover:bg-pink-700'\n      href={props.href}\n      id='submit'\n    >\n      {props.children}\n    </a>\n  ) : (\n    <div\n      className={`gradient shadow-lg ${\n        props.disabled\n          ? 'bg-gray-500 cursor-not-allowed'\n          : 'bg-pink-600 cursor-pointer hover:bg-pink-700'\n      } ${props.loading ? 'bg-pink-700 cursor-wait loading' : ''}`}\n    >\n      <input\n        disabled={props.disabled || props.loading}\n        id='submit'\n        type='submit'\n        form={props.form}\n        value={props.children}\n        className={`w-64 px-4 py-2 text-white ${\n          props.disabled\n            ? 'cursor-not-allowed bg-gray-500'\n            : 'cursor-pointer bg-pink-600 hover:bg-pink-700'\n        } ${props.loading ? 'cursor-wait' : ''}`}\n      />\n    </div>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { SubmitRequest } from '../rfm/services/api/github'\nimport { createGithubIssue } from '../rfm/services/github'\nimport Button from './Button'\n\nconst formatProperty = (key: string, data?: SubmitRequest) => {\n  const property = data && data[key as keyof SubmitRequest]\n  if (property instanceof Array) return `[${property.join(', ')}]`\n  return property\n}\n\nconst parseRequestIssue = (requestIssue: string) => {\n  if (requestIssue === 'NONE')\n    return {\n      requestIssueURL: requestIssue,\n      requestIssueNumber: -1,\n    }\n\n  const [left, number] = requestIssue.split('/issues/')\n  return {\n    requestIssueFullName: left.split('/').slice(0, -2).join('/'),\n    requestIssueNumber: Number(number),\n  }\n}\n\nconst Preview: React.FC<{\n  data?: SubmitRequest\n  requestIssue: string\n}> = (props) => {\n  const repo = {\n    ...props.data,\n    ...parseRequestIssue(props.requestIssue),\n  } as SubmitRequest\n  return (\n    <section className='flex flex-col items-center w-full py-6'>\n      <h1 className='font-mono text-xl font-bold'>Save the request</h1>\n      <h3 className='mb-4 text-lg'>\n        You're gonna be redirected to our Github to save this request. After\n        that the project <b>{repo?.fullName}</b> will be marked as calling for\n        maintainers.\n      </h3>\n      <Button href={createGithubIssue(repo)}>Submit request</Button>\n      <div className='w-full text-left sm:w-auto'>\n        <p className='pt-4 font-mono text-xs font-bold text-left text-gray-600'>\n          Inspect\n        </p>\n        <p className='pb-2'>This is the repo you're about to submit:</p>\n\n        <pre className='overflow-auto'>\n          <p>{`{`}</p>\n          {Object.keys(repo || {}).map((key) => (\n            <p className='pl-4' key={key}>\n              <span className='text-pink-500'>{key}</span>\n              <span className='whitespace-pre-wrap'>\n                :\n                <span className='text-gray-800'>\n                  {' '}\n                  {formatProperty(key, repo)}\n                </span>\n                ,\n              </span>\n            </p>\n          ))}\n          <p>{`}`}</p>\n        </pre>\n      </div>\n    </section>\n  )\n}\n\nexport default Preview\n","import React from 'react'\n\nconst Comments: React.FC<{}> = () => {\n  return (\n    <svg\n      className='inline-block align-text-bottom fill-current'\n      viewBox='0 0 14 16'\n      version='1.1'\n      width='16'\n      height='16'\n      aria-hidden='true'\n    >\n      <path\n        fillRule='evenodd'\n        d='M14 1H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2v3.5L7.5 11H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 9H7l-2 2v-2H2V2h12v8z'\n      ></path>\n    </svg>\n  )\n}\n\nexport default Comments\n","import React, { useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { List as PlaceholderList } from 'react-content-loader'\nimport Markdown from 'markdown-to-jsx'\nimport useSWR from 'swr'\nimport { isValidGithubIssueUrl, NONE_ISSUE } from '../rfm/services/github'\nimport {\n  SubmitRequest,\n  fetcherFindSupportIssues,\n} from '../rfm/services/api/github'\nimport Comments from '../rfm/components/Comments'\nimport Error from '../rfm/components/Error'\nimport Button from './Button'\nimport './issue.css'\n\nconst Issue: React.FC<{\n  onNext: () => void\n  data?: SubmitRequest\n  requestIssue: string\n  setRequestIssue: (issue: string) => void\n}> = (props) => {\n  const [didSubmit, setDidSubmit] = useState(false)\n  const isValidUrl = isValidGithubIssueUrl(props.requestIssue)\n  const { data, error } = useSWR(\n    [props.data?.fullName],\n    fetcherFindSupportIssues,\n  )\n\n  return (\n    <section>\n      <h1 className='font-mono text-xl font-bold'>Enter the issue link</h1>\n      <h3 className='text-lg'>\n        To ensure the best communication we need to know in which Github issue\n        the owners of <b>{props.data?.fullName}</b> requested support to\n        maintain the project\n      </h3>\n      <form\n        id='js-submit-issue'\n        className='flex flex-col items-center w-full'\n        onSubmit={(e) => {\n          e.preventDefault()\n          setDidSubmit(true)\n          props.onNext()\n        }}\n      >\n        <div className='w-full md:w-2/3'>\n          <Error error={error} />\n          <input\n            id='githubRepo'\n            value={props.requestIssue}\n            onChange={(e) => props.setRequestIssue(e.currentTarget.value)}\n            placeholder={`github.com/${props.data?.fullName}/:number`}\n            className='w-full px-4 py-2 my-4 border rounded shadow-lg'\n            required\n          />\n\n          <div className='flex flex-col flex-1 w-full'>\n            <p className='pt-4 font-mono text-xs font-bold text-left text-gray-600'>\n              Suggestions\n            </p>\n            <p className='pb-2 text-left'>Maybe it's one of these</p>\n            {data?.requestList.map(\n              ({ id, url, title, user, createdAt, comments, number, body }) => (\n                <label\n                  key={id}\n                  className='flex flex-row items-baseline p-4 border-t cursor-pointer'\n                >\n                  <input\n                    name='issue'\n                    type='radio'\n                    value={url}\n                    checked={props.requestIssue === url}\n                    onChange={(e) =>\n                      props.setRequestIssue(e.currentTarget.value)\n                    }\n                  />\n                  <div className='flex-1 px-4 text-left'>\n                    <p className='font-bold'>\n                      <span className='text-sm'>#{number}</span> {title}\n                    </p>\n                    <div className='w-full text-xs italic text-gray-600 markdown'>\n                      <Markdown>{body?.slice(0, 140)}</Markdown>\n                      {'... '}\n                      <a\n                        href={url}\n                        className='text-blue-500 hover:text-blue-700'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                      >\n                        view more\n                      </a>\n                    </div>\n                    <p className='text-sm text-gray-800'>\n                      Opened by <b>{user}</b> at{' '}\n                      <span>{createdAt?.toLocaleDateString()}</span>{' '}\n                      <Comments /> {comments}\n                    </p>\n                  </div>\n                </label>\n              ),\n            )}\n            {!data ? (\n              <PlaceholderList />\n            ) : (\n              <label className='flex flex-row items-baseline p-4 border-t cursor-pointer'>\n                <input\n                  name='issue'\n                  type='radio'\n                  value={NONE_ISSUE}\n                  checked={props.requestIssue === NONE_ISSUE}\n                  onChange={(e) => props.setRequestIssue(e.currentTarget.value)}\n                />\n                <div className='flex-1 px-4 text-left'>\n                  <p className='font-bold'>No issue exists</p>\n                  <p className='text-sm text-yellow-700'>\n                    <span>⚠️</span>This action is discouraged\n                  </p>\n                  <p className='text-sm text-gray-800'>\n                    If no issue calling for maintainers exists yet we'll create\n                    one. However, we recommend asking the current repo's owner\n                    first.\n                  </p>\n                </div>\n              </label>\n            )}\n          </div>\n        </div>\n\n        {createPortal(\n          <div\n            className={`sticky bottom-0 left-0 right-0 flex justify-center w-full p-2 bg-white ${\n              didSubmit ? 'hidden' : ''\n            }`}\n          >\n            <Button disabled={!isValidUrl} form='js-submit-issue'>\n              Select request issue\n            </Button>\n          </div>,\n          document.getElementsByTagName('main')[0],\n        )}\n      </form>\n    </section>\n  )\n}\n\nexport default Issue\n","import React, { useState, useEffect } from 'react'\nimport { createGithubRepoUrl, isValidGithubUrl } from '../rfm/services/github'\nimport { SubmitRequest } from '../rfm/services/api/github'\nimport Error from '../rfm/components/Error'\nimport Button from './Button'\n\nconst Repo: React.FC<{\n  setRepoUrl: (repo: string) => void\n  onNext: () => void\n  error: any\n  data?: SubmitRequest\n}> = (props) => {\n  const [inputValue, setInputValue] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (props.data?.fullName) {\n      props.onNext()\n    } else {\n      setLoading(false)\n    }\n  }, [props.data])\n\n  return (\n    <section className='flex flex-col w-full'>\n      <h1 className='font-mono text-xl font-bold'>\n        Add a new repository that needs maintance\n      </h1>\n\n      <form\n        className='flex flex-col items-center w-full'\n        onSubmit={(e) => {\n          e.preventDefault()\n          setLoading(true)\n          props.setRepoUrl(createGithubRepoUrl(inputValue))\n        }}\n      >\n        <div className='relative w-full md:w-2/3'>\n          <input\n            value={inputValue}\n            onChange={(e) => setInputValue(e.currentTarget.value)}\n            className='w-full py-2 pl-24 pr-4 my-4 border rounded shadow-lg'\n            required\n          />\n          <span\n            className='absolute text-gray-500'\n            style={{\n              left: '0.5rem',\n              top: '50%',\n              transform: 'translateY(-50%)',\n            }}\n          >\n            github.com/\n          </span>\n        </div>\n\n        <Error error={props.error} />\n        {props.data && !props.data?.fullName && (\n          <div className='flex flex-col justify-center py-6 text-lg text-center'>\n            <p>\n              We couldn't find any repo named{' '}\n              <b>\n                {props.data?.owner}/{props.data?.name}\n              </b>\n            </p>\n            <p>Try to copy and paste the link directly</p>\n          </div>\n        )}\n        <Button disabled={!isValidGithubUrl(inputValue)} loading={loading}>\n          Find repo\n        </Button>\n      </form>\n    </section>\n  )\n}\n\nexport default Repo\n","import React, { useState, useCallback } from 'react'\nimport useSWR from 'swr'\nimport { useTransition, animated } from 'react-spring'\nimport { fetcherSubmitRequest } from '../rfm/services/api/github'\nimport Shell from '../rfm/components/Shell'\nimport Progress from '../rfm/components/Progress'\nimport Preview from './Preview'\nimport Issue from './Issue'\nimport Find from './Find'\n\nconst Submit: React.FC<{}> = () => {\n  const [repoUrl, setRepoUrl] = useState('')\n  const [requestIssue, setRequestIssue] = useState('')\n  const { data, error } = useSWR(repoUrl, fetcherSubmitRequest)\n  const [index, setIndex] = useState(0)\n  const onNext = useCallback(() => setIndex((state) => (state + 1) % 3), [])\n  const transitions = useTransition(index, (p) => p, {\n    from: {\n      display: 'block',\n      width: '100%',\n      opacity: 0,\n      transform: 'translate3d(100%, 0, 0)',\n    },\n    enter: {\n      display: 'block',\n      width: '100%',\n      opacity: 1,\n      transform: 'translate3d(0%, 0, 0)',\n    },\n    leave: {\n      display: 'none',\n      width: '100%',\n      opacity: 0,\n      transform: 'translate3d(-50%, 0, 0)',\n    },\n  })\n\n  return (\n    <Shell>\n      <div className='flex flex-col items-center justify-center w-full text-center md:p-8'>\n        <Progress ratio={(index + 1) / 3} />\n        <div className='flex flex-row w-full'>\n          {transitions.map(({ item, props, key }) => {\n            return [\n              <animated.div key={key} style={props}>\n                <Find\n                  onNext={onNext}\n                  setRepoUrl={setRepoUrl}\n                  error={error}\n                  data={data}\n                />\n              </animated.div>,\n              <animated.div key={key} style={props}>\n                <Issue\n                  onNext={onNext}\n                  data={data}\n                  requestIssue={requestIssue}\n                  setRequestIssue={setRequestIssue}\n                />\n              </animated.div>,\n              <animated.div key={key} style={props}>\n                <Preview data={data} requestIssue={requestIssue} />\n              </animated.div>,\n            ][item]\n          })}\n        </div>\n      </div>\n    </Shell>\n  )\n}\n\nexport default Submit\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useTransition, animated } from 'react-spring'\nimport { HashRouter, Route, useLocation, Switch } from 'react-router-dom'\nimport * as serviceWorker from './rfm/services/sw'\nimport './tailwind.css'\nimport Home from './home'\nimport Submit from './submit'\n\nconst App: React.FC<{}> = () => {\n  const location = useLocation()\n  const transitions = useTransition(location, (location) => location.pathname, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  return (\n    <>\n      {transitions.map(({ item: location, props, key }) => (\n        <animated.div key={key} style={props}>\n          <Switch location={location}>\n            <Route exact path='/' component={Home} />\n            <Route path='/submit' component={Submit} />\n          </Switch>\n        </animated.div>\n      ))}\n    </>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename='/'>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}