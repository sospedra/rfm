{"version":3,"sources":["rfm/services/sw/index.ts","rfm/components/Shell/Footer.tsx","rfm/components/Shell/Header.tsx","rfm/components/Shell/index.tsx","rfm/services/api/github.ts","home/Search.tsx","rfm/components/Star/index.tsx","rfm/components/Issue/index.tsx","rfm/components/Circle/index.tsx","home/List.tsx","rfm/components/Error/index.tsx","home/index.tsx","submit/Preview.tsx","submit/SubmitButton.tsx","rfm/services/github/index.ts","submit/Find.tsx","submit/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Footer","className","aria-label","role","href","rel","target","Header","to","Shell","props","children","GITHUB_ROOT","fetcherRequestList","a","query","params","path","join","fetch","response","json","payload","items","map","item","body","JSON","parse","id","comments","createdAt","Date","created_at","title","updatedAt","updated_at","url","html_url","ex","requestList","filter","_","total","total_count","safe","collection","key","name","property","fetcherSubmitRequest","repoUrl","split","pathname","owner","headers","Accept","language","langmap","repo","description","fullName","full_name","openIssues","open_issues_count","stars","stargazers_count","license","Search","style","height","onSubmit","e","preventDefault","form","FormData","currentTarget","setQuery","get","htmlFor","placeholder","type","value","Star","viewBox","version","width","fillRule","d","Issue","aria-hidden","Circle","backgroundColor","color","List","selectMessage","display","topics","topic","toLocaleDateString","humanNumber","Error","error","console","Home","useState","useSWR","data","Preview","Object","keys","Array","formatProperty","SubmitButton","request","isValid","candidate","isValidUrl","isURL","host_whitelist","isValidFullName","length","isValidGithubUrl","inputValue","newGithubIssueUrl","stringify","labels","user","disabled","Find","setInputValue","setGithubRepo","onChange","left","top","transform","Submit","githubRepo","ReactDOM","render","StrictMode","basename","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.117a2646.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\n\nconst Footer: React.FC<{}> = () => {\n  return (\n    <footer className='flex flex-row justify-between w-full max-w-4xl p-4 mx-auto mt-4'>\n      <p>\n        Hand-crafted with\n        <span className='mx-1 text-red-700' aria-label='heart' role='img'>\n          ♥️\n        </span>\n        by\n        <a\n          className='ml-1 link'\n          href='https://sospedra.me'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          @sospedra\n        </a>\n      </p>\n\n      <div className='flex flex-col items-end'>\n        <a\n          href='https://twitter.com/sospedra_r'\n          target='_blank'\n          rel='noopener noreferrer'\n          className='link'\n        >\n          Contact\n        </a>\n        <a\n          href='https://github.com/sospedra/rfm'\n          target='_blank'\n          rel='noopener noreferrer'\n          className='link'\n        >\n          Github\n        </a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header: React.FC<{}> = () => {\n  return (\n    <header className='flex flex-row justify-between w-full max-w-4xl p-4 mx-auto'>\n      <Link to='/' className='font-mono text-xl font-bold text-black'>\n        <span role='img' aria-label='construction'>\n          🚧\n        </span>{' '}\n        rfm\n      </Link>\n      <Link\n        to='/submit'\n        className='px-2 py-1 text-pink-600 border border-pink-600 rounded'\n      >\n        Submit new repo\n      </Link>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Footer from './Footer'\nimport Header from './Header'\n\nconst Shell: React.FC<{}> = (props) => (\n  <div className='flex flex-col min-h-screen'>\n    <Header />\n    <main className='flex-grow w-full max-w-4xl p-4 mx-auto'>\n      {props.children}\n    </main>\n    <Footer />\n  </div>\n)\n\nexport default Shell\n","import langmap from 'language-map'\n\nconst GITHUB_ROOT = 'https://api.github.com'\n\nexport type SubmitRequest = {\n  aceMode?: string\n  aliases?: string[]\n  color?: string\n  description: string\n  extensions?: string[]\n  filenames?: string[]\n  fullName: string\n  owner: string\n  name: string\n  group?: string\n  interpreters?: string[]\n  language: string\n  license?: string\n  openIssues: number\n  stars: number\n  topics?: string[]\n  updatedAt: string\n  url: string\n}\n\nexport type Request = {\n  body: SubmitRequest\n  comments: number\n  createdAt: Date\n  title: string\n  id: number\n  updatedAt: Date\n  url: string\n}\n\nexport const fetcherRequestList = async (query: string = '') => {\n  const params = [\n    'repo:sospedra/rfm',\n    'state:open',\n    'label:search',\n    query,\n    'in:title,body',\n  ]\n  const path = `${GITHUB_ROOT}/search/issues?q=${params.join('+')}&per_page=100`\n  const response = await fetch(path)\n  const payload: {\n    items: { [key: string]: any }[]\n    total_count: number\n  } = await response.json()\n  const items = payload.items.map<Request | null>((item) => {\n    try {\n      return {\n        body: JSON.parse(item.body),\n        id: item.id,\n        comments: item.comments,\n        createdAt: new Date(item.created_at),\n        title: item.title,\n        updatedAt: new Date(item.updated_at),\n        url: item.html_url,\n      }\n    } catch (ex) {\n      return null\n    }\n  })\n  const requestList = items.filter((_) => _ !== null) as Request[]\n\n  return {\n    requestList,\n    total: payload.total_count,\n  }\n}\n\nconst safe = <T extends { [key: string]: any }>(\n  collection: T | undefined,\n  key: keyof T,\n  name?: string,\n) => {\n  if (!collection) return {}\n  let property = collection[key] as string | string[] | number\n  return !!property ? { [name || key]: property } : {}\n}\n\nexport const fetcherSubmitRequest = async (repoUrl: string) => {\n  const [_, pathname] = repoUrl.split('github.com/')\n  const [owner, name] = pathname.split('/')\n  const response: { [key: string]: any } = await fetch(\n    `${GITHUB_ROOT}/repos/${owner}/${name}`,\n    {\n      headers: {\n        Accept: 'application/vnd.github.mercy-preview+json',\n      },\n    },\n  )\n  const payload = await response.json()\n  const language = langmap[payload.language]\n  const repo: SubmitRequest = {\n    description: payload.description,\n    fullName: payload.full_name,\n    language: payload.language,\n    name,\n    openIssues: payload.open_issues_count,\n    owner,\n    stars: payload.stargazers_count,\n    updatedAt: payload.updated_at,\n    url: payload.html_url,\n    ...safe(payload.license, 'spdx_id', 'license'),\n    ...safe(payload, 'topics'),\n    ...safe(language, 'filenames'),\n    ...safe(language, 'aceMode'),\n    ...safe(language, 'aliases'),\n    ...safe(language, 'color'),\n    ...safe(language, 'extensions'),\n    ...safe(language, 'group'),\n    ...safe(language, 'interpreters'),\n  }\n\n  return repo\n}\n","import React from 'react'\n\nconst Search: React.FC<{\n  setQuery: (query: string) => void\n}> = (props) => {\n  return (\n    <section\n      className='flex flex-col items-center justify-center w-full text-center md:p-8'\n      style={{ height: '50%' }}\n    >\n      <h2 className='italic'>Request for maintainers</h2>\n      <form\n        className='w-full max-w-xl mx-auto'\n        onSubmit={(e) => {\n          e.preventDefault()\n          const form = new FormData(e.currentTarget)\n          props.setQuery(form.get('search') as string)\n        }}\n      >\n        <label htmlFor='search' className='block'>\n          <h1 className='font-mono text-xl font-bold'>\n            Browse repos that need support\n          </h1>\n        </label>\n        <div className='flex flex-row my-4'>\n          <input\n            id='search'\n            name='search'\n            className='block w-full px-4 py-2 border rounded shadow-lg'\n            placeholder='Type a name, language, tag, etc.'\n          />\n          <input\n            className='px-4 py-2 ml-4 text-white bg-pink-600 rounded shadow-lg cursor-pointer hover:bg-pink-700'\n            type='submit'\n            value='Search'\n          />\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Star: React.FC<{}> = () => (\n  <svg\n    aria-label='star'\n    className='inline-block align-text-bottom fill-current'\n    viewBox='0 0 14 16'\n    version='1.1'\n    width='14'\n    height='16'\n    role='img'\n  >\n    <path\n      fillRule='evenodd'\n      d='M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z'\n    ></path>\n  </svg>\n)\n\nexport default Star\n","import React from 'react'\n\nconst Issue: React.FC<{}> = () => (\n  <svg\n    className='inline-block align-text-bottom fill-current'\n    viewBox='0 0 14 16'\n    version='1.1'\n    width='14'\n    height='16'\n    aria-hidden='true'\n  >\n    <path\n      fillRule='evenodd'\n      d='M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 011.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z'\n    ></path>\n  </svg>\n)\n\nexport default Issue\n","import React from 'react'\n\nconst Circle: React.FC<{ color?: string }> = (props) => (\n  <span\n    className='relative inline-block mr-1 bg-gray-900 rounded-full'\n    style={{\n      backgroundColor: props.color,\n      width: 14,\n      height: 14,\n    }}\n  />\n)\n\nexport default Circle\n","import React from 'react'\nimport { Code as PlaceholderCode } from 'react-content-loader'\nimport humanNumber from 'human-number'\nimport { Request } from '../rfm/services/api/github'\nimport Star from '../rfm/components/Star'\nimport Issue from '../rfm/components/Issue'\nimport Circle from '../rfm/components/Circle'\n\nconst selectMessage = (total?: number) => {\n  switch (total) {\n    case 0:\n      return (\n        <p className='text-lg'>\n          There are not requests that matches your criteria{' '}\n          <span role='img' aria-label='shrug'>\n            🤷🏻‍♂️\n          </span>{' '}\n          Try another search.\n        </p>\n      )\n    case 1:\n      return (\n        <p className='text-lg'>\n          There is <b>1</b> request that needs your help{' '}\n          <span role='img' aria-label='muscle'>\n            💪\n          </span>\n        </p>\n      )\n    default:\n      return (\n        <p className='text-lg'>\n          There are <b>{total}</b> requests that need your help{' '}\n          <span role='img' aria-label='hero'>\n            🦸🏽‍♀️\n          </span>\n        </p>\n      )\n  }\n}\n\nconst List: React.FC<{\n  requestList?: Request[]\n  total?: number\n}> = (props) => {\n  if (!props.requestList) {\n    return (\n      <section className='w-full py-4 md:w-2/3'>\n        <PlaceholderCode />\n        <br />\n        <PlaceholderCode />\n      </section>\n    )\n  }\n  return (\n    <section className='w-full py-4'>\n      {selectMessage(props.total)}\n      <ul>\n        {props.requestList.map(({ url, createdAt, body }) => (\n          <li key={url} className='py-4 border-b sm:mx-4'>\n            <a\n              href={body.url}\n              target='_blank'\n              rel='noopener noreferrer'\n              className='text-lg text-blue-600 hover:text-blue-800'\n              style={{ display: 'block' }}\n            >\n              {body.owner}/<b>{body.name}</b>\n            </a>\n            <p className='pt-1'>{body.description}</p>\n            <div className='flex flex-row flex-wrap items-end w-full pt-1 text-sm'>\n              {body.topics?.map((topic) => (\n                <span\n                  key={topic}\n                  className='p-1 mb-1 mr-1 text-pink-500 bg-pink-100 rounded'\n                >\n                  {topic}\n                </span>\n              ))}\n            </div>\n            <p className='text-sm text-gray-700'>\n              Requested at{' '}\n              <b className='font-semibold'>{createdAt.toLocaleDateString()}</b>{' '}\n              <a\n                href={url}\n                className='text-blue-600 hover:text-blue-800'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                Did something change?\n              </a>\n            </p>\n            <div className='flex flex-row pt-1 text-sm text-gray-700'>\n              <span className='mr-4'>\n                <Star /> {humanNumber(body.stars)}\n              </span>\n              <span className='flex flex-row items-center mr-4'>\n                <Circle color={body.color} /> {body.language}\n              </span>\n              <span className='mr-4'>\n                <Issue /> {body.openIssues}\n              </span>\n              <span className='mr-4'>{body.license}</span>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <div className='pt-4 text-sm italic text-gray-800'>\n        <p>\n          <b className='font-semibold'>\n            ProTip\n            <span aria-label='trademark' role='img'>\n              ™️\n            </span>{' '}\n          </b>\n          Results are limited to a{' '}\n          <b className='font-semibold'>maximum of 100 items</b> per search.\n        </p>\n        <p>\n          To get the best results{' '}\n          <b className='font-semibold'>refine your query</b> or inspect the{' '}\n          <a\n            className='text-blue-500 hover:text-blue-700'\n            href='https://github.com/sospedra/rfm'\n          >\n            repo\n          </a>\n        </p>\n      </div>\n    </section>\n  )\n}\n\nexport default List\n","import React from 'react'\n\nconst Error: React.FC<{\n  error: any\n}> = (props) => {\n  if (!props.error) return null\n  return (\n    <aside className='p-4 m-6 text-red-700 border border-red-700 rounded'>\n      {console.error(props.error)}\n      Something went wrong. Check the report details in the console.\n    </aside>\n  )\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport useSWR from 'swr'\nimport Shell from '../rfm/components/Shell'\nimport { fetcherRequestList } from '../rfm/services/api/github'\nimport Search from './Search'\nimport List from './List'\nimport Error from '../rfm/components/Error'\n\nconst Home: React.FC<{}> = () => {\n  const [query, setQuery] = useState(' ')\n  const { data, error } = useSWR(query, fetcherRequestList)\n\n  return (\n    <Shell>\n      <Search setQuery={setQuery} />\n      <Error error={error} />\n      <List {...data} />\n    </Shell>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { SubmitRequest } from '../rfm/services/api/github'\n\nconst formatProperty = (key: string, data?: SubmitRequest) => {\n  const property = data && data[key as keyof SubmitRequest]\n  if (property instanceof Array) return `[${property.join(', ')}]`\n  return property\n}\n\nconst Preview: React.FC<{\n  data?: SubmitRequest\n}> = (props) => {\n  if (!props.data) return null\n\n  if (!props.data.fullName) {\n    return (\n      <section className='flex flex-col justify-center py-6 text-lg text-center'>\n        <p>\n          We couldn't find any repo named{' '}\n          <b>\n            {props.data.owner}/{props.data.name}\n          </b>\n        </p>\n        <p>Try to copy and paste the link directly</p>\n      </section>\n    )\n  }\n\n  return (\n    <section className='flex justify-center py-6'>\n      <div className='w-full sm:w-auto'>\n        <p className='py-4 text-lg'>\n          The repo <b>{props.data.fullName}</b> will be posted\n        </p>\n        <pre className='overflow-auto'>\n          <p>{`{`}</p>\n          {Object.keys(props.data).map((key) => (\n            <p className='pl-4' key={key}>\n              <span className='text-pink-500'>{key}</span>\n              <span className='whitespace-pre-wrap'>\n                :\n                <span className='text-gray-800'>\n                  {' '}\n                  {formatProperty(key, props.data)}\n                </span>\n                ,\n              </span>\n            </p>\n          ))}\n          <p>{`}`}</p>\n        </pre>\n      </div>\n    </section>\n  )\n}\n\nexport default Preview\n","import React from 'react'\nimport { SubmitRequest } from '../rfm/services/api/github'\nimport { createGithubIssue, isValidGithubUrl } from '../rfm/services/github'\nimport './submit-button.css'\n\nconst SubmitButton: React.FC<{\n  data?: SubmitRequest\n  inputValue: string\n}> = (props) => {\n  const isValid = isValidGithubUrl(props.inputValue)\n\n  return props.data?.fullName ? (\n    <a\n      id='submit'\n      href={createGithubIssue(props.data)}\n      className='w-64 px-4 py-2 text-white bg-pink-600 rounded shadow-lg hover:bg-pink-700'\n    >\n      Submit request\n    </a>\n  ) : (\n    <input\n      value='Find repo'\n      type='submit'\n      disabled={!isValid}\n      className={`w-64 px-4 py-2 text-white rounded shadow-lg ${\n        isValid\n          ? 'cursor-pointer bg-pink-600 hover:bg-pink-700'\n          : 'bg-gray-500 cursor-not-allowed'\n      }`}\n    />\n  )\n}\n\nexport default SubmitButton\n","import newGithubIssueUrl from 'new-github-issue-url'\nimport isURL from 'validator/lib/isURL'\nimport { SubmitRequest } from '../api/github'\n\nexport const createGithubIssue = (request?: SubmitRequest) => {\n  if (!request) return ''\n  return newGithubIssueUrl({\n    body: JSON.stringify(request, null, 4),\n    labels: ['search'],\n    repo: 'rfm',\n    title: request.fullName,\n    user: 'sospedra',\n  })\n}\n\nexport const isValidGithubUrl = (candidate: string) => {\n  const isValidUrl = isURL(candidate, {\n    host_whitelist: [/^.*github\\.com$/],\n  })\n  const isValidFullName =\n    candidate.split('/').length === 2 && candidate.match(/\\//gi)?.length === 1\n\n  return isValidUrl || isValidFullName\n}\n\nexport const createGithubRepoUrl = (candidate: string) => {\n  return isURL(candidate) ? candidate : `https://github.com/${candidate}`\n}\n","import React, { useState } from 'react'\nimport SubmitButton from './SubmitButton'\nimport { createGithubRepoUrl } from '../rfm/services/github'\nimport { SubmitRequest } from '../rfm/services/api/github'\n\nconst Find: React.FC<{\n  setGithubRepo: (repo: string) => void\n  data?: SubmitRequest\n}> = (props) => {\n  const [inputValue, setInputValue] = useState('')\n\n  return (\n    <form\n      className='flex flex-col items-center w-full'\n      onSubmit={(e) => {\n        e.preventDefault()\n        props.setGithubRepo(createGithubRepoUrl(inputValue))\n      }}\n    >\n      <div\n        className={`w-full transition transform duration-1000 relative md:w-2/3 ${\n          props.data?.fullName\n            ? '-translate-y-8 opacity-0'\n            : 'translate-y-0 opacity-100'\n        }`}\n      >\n        <input\n          id='githubRepo'\n          value={inputValue}\n          onChange={(e) => setInputValue(e.currentTarget.value)}\n          className='w-full py-2 pl-24 pr-4 my-4 border rounded shadow-lg'\n        />\n        <span\n          className='absolute text-gray-500'\n          style={{\n            left: '0.9rem',\n            top: '50%',\n            transform: 'translateY(-50%)',\n          }}\n        >\n          github.com/\n        </span>\n      </div>\n\n      <SubmitButton inputValue={inputValue} data={props.data} />\n    </form>\n  )\n}\n\nexport default Find\n","import React, { useState } from 'react'\nimport useSWR from 'swr'\nimport { fetcherSubmitRequest } from '../rfm/services/api/github'\nimport Shell from '../rfm/components/Shell'\nimport Error from '../rfm/components/Error'\nimport Preview from './Preview'\nimport Find from './Find'\n\nconst Submit: React.FC<{}> = () => {\n  const [githubRepo, setGithubRepo] = useState('')\n  const { data, error } = useSWR(githubRepo, fetcherSubmitRequest)\n\n  return (\n    <Shell>\n      <section className='flex flex-col items-center justify-center w-full text-center md:p-8'>\n        <label htmlFor={!!data ? 'submit' : 'githubRepo'}>\n          <h1 className='font-mono text-xl font-bold'>\n            Add a new repository that needs maintance\n          </h1>\n        </label>\n\n        <Find setGithubRepo={setGithubRepo} data={data} />\n        <Error error={error} />\n      </section>\n\n      <Preview data={data} />\n    </Shell>\n  )\n}\n\nexport default Submit\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, Route } from 'react-router-dom'\nimport * as serviceWorker from './rfm/services/sw'\nimport './tailwind.css'\nimport Home from './home'\nimport Submit from './submit'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename='/'>\n      <Route exact path='/' component={Home} />\n      <Route path='/submit' component={Submit} />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}